const nodemailer = require('nodemailer');

// T·∫°o transporter cho vi·ªác g·ª≠i email
const createEmailTransporter = () => {
  return nodemailer.createTransport({
    service: 'gmail',
    auth: {
      user: process.env.EMAIL_USER,
      pass: process.env.EMAIL_PASS,
    },
  });
};

// H√†m g·ª≠i email th√¥ng b√°o kh√≥a t√†i kho·∫£n
const sendAccountBlockedEmail = async (userEmail, userName, reason) => {
  try {
    const transporter = createEmailTransporter();
    
    await transporter.sendMail({
      to: userEmail,
      subject: 'T√†i kho·∫£n Rentzy c·ªßa b·∫°n ƒë√£ b·ªã kh√≥a',
      html: `
        <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px; border: 1px solid #ddd; border-radius: 8px;">
          <div style="text-align: center; margin-bottom: 20px;">
            <h1 style="color: #1976d2; margin: 0;">Rentzy</h1>
          </div>
          <h2 style="color: #d32f2f; text-align: center;">Th√¥ng b√°o kh√≥a t√†i kho·∫£n</h2>
          <p>Xin ch√†o <strong>${userName}</strong>,</p>
          <p>Ch√∫ng t√¥i xin th√¥ng b√°o r·∫±ng t√†i kho·∫£n c·ªßa b·∫°n tr√™n h·ªá th·ªëng Rentzy ƒë√£ b·ªã t·∫°m kh√≥a b·ªüi qu·∫£n tr·ªã vi√™n.</p>
          <div style="background-color: #ffebee; padding: 15px; border-radius: 5px; margin: 20px 0;">
            <p style="margin: 0;"><strong>L√Ω do kh√≥a t√†i kho·∫£n:</strong></p>
            <p style="margin: 5px 0 0 0; color: #d32f2f;">${reason}</p>
          </div>
          <p>Trong th·ªùi gian t√†i kho·∫£n b·ªã kh√≥a, b·∫°n s·∫Ω kh√¥ng th·ªÉ:</p>
          <ul>
            <li>ƒêƒÉng nh·∫≠p v√†o h·ªá th·ªëng</li>
            <li>Th·ª±c hi·ªán c√°c giao d·ªãch thu√™ xe</li>
            <li>S·ª≠ d·ª•ng c√°c d·ªãch v·ª• c·ªßa Rentzy</li>
          </ul>
          <p>N·∫øu b·∫°n cho r·∫±ng ƒë√¢y l√† nh·∫ßm l·∫´n ho·∫∑c c·∫ßn h·ªó tr·ª£ th√™m, vui l√≤ng li√™n h·ªá v·ªõi b·ªô ph·∫≠n chƒÉm s√≥c kh√°ch h√†ng c·ªßa ch√∫ng t√¥i qua:</p>
          <ul>
            <li>Email: support@rentzy.com</li>
            <li>Hotline: 1900-xxxx</li>
          </ul>
          <p>Tr√¢n tr·ªçng,<br/><strong>ƒê·ªôi ng≈© Rentzy</strong></p>
          <hr style="border: none; border-top: 1px solid #eee; margin: 20px 0;">
          <p style="font-size: 12px; color: #666; text-align: center;">Email n√†y ƒë∆∞·ª£c g·ª≠i t·ª± ƒë·ªông, vui l√≤ng kh√¥ng tr·∫£ l·ªùi.</p>
        </div>
      `
    });
    
    console.log(`Account blocked email sent successfully to ${userEmail}`);
    return { success: true };
  } catch (error) {
    console.error('Error sending account blocked email:', error);
    return { success: false, error: error.message };
  }
};

// H√†m g·ª≠i email th√¥ng b√°o m·ªü kh√≥a t√†i kho·∫£n
const sendAccountUnblockedEmail = async (userEmail, userName) => {
  try {
    const transporter = createEmailTransporter();
    
    await transporter.sendMail({
      to: userEmail,
      subject: 'T√†i kho·∫£n Rentzy c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c m·ªü kh√≥a',
      html: `
        <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px; border: 1px solid #ddd; border-radius: 8px;">
          <div style="text-align: center; margin-bottom: 20px;">
            <h1 style="color: #1976d2; margin: 0;">Rentzy</h1>
          </div>
          <h2 style="color: #4caf50; text-align: center;">Th√¥ng b√°o m·ªü kh√≥a t√†i kho·∫£n</h2>
          <p>Xin ch√†o <strong>${userName}</strong>,</p>
          <p>Ch√∫ng t√¥i xin th√¥ng b√°o r·∫±ng t√†i kho·∫£n c·ªßa b·∫°n tr√™n h·ªá th·ªëng Rentzy ƒë√£ ƒë∆∞·ª£c m·ªü kh√≥a v√† c√≥ th·ªÉ s·ª≠ d·ª•ng b√¨nh th∆∞·ªùng.</p>
          <div style="background-color: #e8f5e8; padding: 15px; border-radius: 5px; margin: 20px 0; text-align: center;">
            <p style="margin: 0; color: #4caf50; font-weight: bold;">üéâ T√†i kho·∫£n c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c k√≠ch ho·∫°t l·∫°i!</p>
          </div>
          <p>B√¢y gi·ªù b·∫°n c√≥ th·ªÉ:</p>
          <ul>
            <li>ƒêƒÉng nh·∫≠p v√†o h·ªá th·ªëng</li>
            <li>Thu√™ xe v√† s·ª≠ d·ª•ng c√°c d·ªãch v·ª•</li>
            <li>Truy c·∫≠p ƒë·∫ßy ƒë·ªß c√°c t√≠nh nƒÉng c·ªßa Rentzy</li>
          </ul>
          <div style="text-align: center; margin: 30px 0;">
            <a href="${process.env.CLIENT_ORIGIN}/login" style="background-color: #1976d2; color: white; padding: 12px 24px; text-decoration: none; border-radius: 5px; display: inline-block;">ƒêƒÉng nh·∫≠p ngay</a>
          </div>
          <p>C·∫£m ∆°n b·∫°n ƒë√£ s·ª≠ d·ª•ng d·ªãch v·ª• c·ªßa Rentzy. Ch√∫ng t√¥i mong mu·ªën mang ƒë·∫øn cho b·∫°n nh·ªØng tr·∫£i nghi·ªám t·ªët nh·∫•t.</p>
          <p>Tr√¢n tr·ªçng,<br/><strong>ƒê·ªôi ng≈© Rentzy</strong></p>
          <hr style="border: none; border-top: 1px solid #eee; margin: 20px 0;">
          <p style="font-size: 12px; color: #666; text-align: center;">Email n√†y ƒë∆∞·ª£c g·ª≠i t·ª± ƒë·ªông, vui l√≤ng kh√¥ng tr·∫£ l·ªùi.</p>
        </div>
      `
    });
    
    console.log(`Account unblocked email sent successfully to ${userEmail}`);
    return { success: true };
  } catch (error) {
    console.error('Error sending account unblocked email:', error);
    return { success: false, error: error.message };
  }
};

// H√†m g·ª≠i email c·∫£nh b√°o tr∆∞·ªõc khi kh√≥a t√†i kho·∫£n
const sendAccountWarningEmail = async (userEmail, userName, warningReason, warningCount = 1) => {
  try {
    const transporter = createEmailTransporter();
    
    await transporter.sendMail({
      to: userEmail,
      subject: `C·∫£nh b√°o vi ph·∫°m t√†i kho·∫£n Rentzy - L·∫ßn ${warningCount}`,
      html: `
        <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px; border: 1px solid #ddd; border-radius: 8px;">
          <div style="text-align: center; margin-bottom: 20px;">
            <h1 style="color: #1976d2; margin: 0;">Rentzy</h1>
          </div>
          <h2 style="color: #ff9800; text-align: center;">‚ö†Ô∏è C·∫£nh b√°o vi ph·∫°m t√†i kho·∫£n</h2>
          <p>Xin ch√†o <strong>${userName}</strong>,</p>
          <p>Ch√∫ng t√¥i ph√°t hi·ªán t√†i kho·∫£n c·ªßa b·∫°n c√≥ h√†nh vi vi ph·∫°m ch√≠nh s√°ch s·ª≠ d·ª•ng d·ªãch v·ª• Rentzy.</p>
          <div style="background-color: #fff3e0; padding: 15px; border-radius: 5px; margin: 20px 0; border-left: 4px solid #ff9800;">
            <p style="margin: 0;"><strong>L√Ω do c·∫£nh b√°o:</strong></p>
            <p style="margin: 5px 0 0 0; color: #e65100;">${warningReason}</p>
            <p style="margin: 10px 0 0 0; font-weight: bold;">ƒê√¢y l√† c·∫£nh b√°o l·∫ßn th·ª© ${warningCount}</p>
          </div>
          <div style="background-color: #ffebee; padding: 15px; border-radius: 5px; margin: 20px 0;">
            <p style="margin: 0; font-weight: bold; color: #d32f2f;">L∆∞u √Ω quan tr·ªçng:</p>
            <ul style="margin: 10px 0 0 0; color: #d32f2f;">
              <li>N·∫øu ti·∫øp t·ª•c vi ph·∫°m, t√†i kho·∫£n c·ªßa b·∫°n c√≥ th·ªÉ b·ªã kh√≥a t·∫°m th·ªùi ho·∫∑c vƒ©nh vi·ªÖn</li>
              <li>Vui l√≤ng tu√¢n th·ªß nghi√™m ng·∫∑t c√°c quy ƒë·ªãnh c·ªßa Rentzy</li>
              <li>ƒê·ªçc k·ªπ ƒëi·ªÅu kho·∫£n s·ª≠ d·ª•ng d·ªãch v·ª•</li>
            </ul>
          </div>
          <p>ƒê·ªÉ tr√°nh b·ªã kh√≥a t√†i kho·∫£n, vui l√≤ng:</p>
          <ul>
            <li>Tu√¢n th·ªß ƒë·∫ßy ƒë·ªß c√°c quy ƒë·ªãnh c·ªßa Rentzy</li>
            <li>S·ª≠ d·ª•ng d·ªãch v·ª• m·ªôt c√°ch c√≥ tr√°ch nhi·ªám</li>
            <li>Li√™n h·ªá h·ªó tr·ª£ n·∫øu c√≥ th·∫Øc m·∫Øc v·ªÅ ch√≠nh s√°ch</li>
          </ul>
          <div style="text-align: center; margin: 30px 0;">
            <a href="${process.env.CLIENT_ORIGIN}/terms" style="background-color: #1976d2; color: white; padding: 12px 24px; text-decoration: none; border-radius: 5px; display: inline-block;">Xem ƒëi·ªÅu kho·∫£n s·ª≠ d·ª•ng</a>
          </div>
          <p>N·∫øu b·∫°n c√≥ th·∫Øc m·∫Øc, vui l√≤ng li√™n h·ªá:</p>
          <ul>
            <li>Email: support@rentzy.com</li>
            <li>Hotline: 1900-xxxx</li>
          </ul>
          <p>Tr√¢n tr·ªçng,<br/><strong>ƒê·ªôi ng≈© Rentzy</strong></p>
          <hr style="border: none; border-top: 1px solid #eee; margin: 20px 0;">
          <p style="font-size: 12px; color: #666; text-align: center;">Email n√†y ƒë∆∞·ª£c g·ª≠i t·ª± ƒë·ªông, vui l√≤ng kh√¥ng tr·∫£ l·ªùi.</p>
        </div>
      `
    });
    
    console.log(`Account warning email sent successfully to ${userEmail}`);
    return { success: true };
  } catch (error) {
    console.error('Error sending account warning email:', error);
    return { success: false, error: error.message };
  }
};

// H√†m g·ª≠i email th√¥ng b√°o t√†i kho·∫£n b·ªã kh√≥a t·∫°m th·ªùi
const sendTemporaryBlockEmail = async (userEmail, userName, reason, unblockDate) => {
  try {
    const transporter = createEmailTransporter();
    const unblockDateFormatted = new Date(unblockDate).toLocaleDateString('vi-VN');
    
    await transporter.sendMail({
      to: userEmail,
      subject: 'T√†i kho·∫£n Rentzy c·ªßa b·∫°n ƒë√£ b·ªã kh√≥a t·∫°m th·ªùi',
      html: `
        <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px; border: 1px solid #ddd; border-radius: 8px;">
          <div style="text-align: center; margin-bottom: 20px;">
            <h1 style="color: #1976d2; margin: 0;">Rentzy</h1>
          </div>
          <h2 style="color: #ff5722; text-align: center;">Th√¥ng b√°o kh√≥a t√†i kho·∫£n t·∫°m th·ªùi</h2>
          <p>Xin ch√†o <strong>${userName}</strong>,</p>
          <p>T√†i kho·∫£n c·ªßa b·∫°n tr√™n h·ªá th·ªëng Rentzy ƒë√£ b·ªã kh√≥a t·∫°m th·ªùi do vi ph·∫°m ch√≠nh s√°ch s·ª≠ d·ª•ng.</p>
          <div style="background-color: #ffebee; padding: 15px; border-radius: 5px; margin: 20px 0;">
            <p style="margin: 0;"><strong>L√Ω do kh√≥a t√†i kho·∫£n:</strong></p>
            <p style="margin: 5px 0 0 0; color: #d32f2f;">${reason}</p>
          </div>
          <div style="background-color: #e3f2fd; padding: 15px; border-radius: 5px; margin: 20px 0; text-align: center;">
            <p style="margin: 0; font-weight: bold; color: #1976d2;">üìÖ T√†i kho·∫£n s·∫Ω ƒë∆∞·ª£c m·ªü kh√≥a v√†o: ${unblockDateFormatted}</p>
          </div>
          <p>Trong th·ªùi gian b·ªã kh√≥a, b·∫°n s·∫Ω kh√¥ng th·ªÉ s·ª≠ d·ª•ng c√°c d·ªãch v·ª• c·ªßa Rentzy.</p>
          <p>Sau khi ƒë∆∞·ª£c m·ªü kh√≥a, vui l√≤ng tu√¢n th·ªß nghi√™m ng·∫∑t c√°c quy ƒë·ªãnh ƒë·ªÉ tr√°nh b·ªã kh√≥a l·∫°i.</p>
          <p>N·∫øu c√≥ th·∫Øc m·∫Øc, vui l√≤ng li√™n h·ªá h·ªó tr·ª£:</p>
          <ul>
            <li>Email: support@rentzy.com</li>
            <li>Hotline: 1900-xxxx</li>
          </ul>
          <p>Tr√¢n tr·ªçng,<br/><strong>ƒê·ªôi ng≈© Rentzy</strong></p>
          <hr style="border: none; border-top: 1px solid #eee; margin: 20px 0;">
          <p style="font-size: 12px; color: #666; text-align: center;">Email n√†y ƒë∆∞·ª£c g·ª≠i t·ª± ƒë·ªông, vui l√≤ng kh√¥ng tr·∫£ l·ªùi.</p>
        </div>
      `
    });
    
    console.log(`Temporary block email sent successfully to ${userEmail}`);
    return { success: true };
  } catch (error) {
    console.error('Error sending temporary block email:', error);
    return { success: false, error: error.message };
  }
};

// H√†m g·ª≠i email th√¥ng b√°o chung cho t√†i kho·∫£n
const sendAccountStatusEmail = async (userEmail, userName, action, reason = null) => {
  if (action === 'block') {
    return await sendAccountBlockedEmail(userEmail, userName, reason);
  } else if (action === 'unblock') {
    return await sendAccountUnblockedEmail(userEmail, userName);
  } else {
    throw new Error('Invalid action. Use "block" or "unblock"');
  }
};

module.exports = {
  createEmailTransporter,
  sendAccountBlockedEmail,
  sendAccountUnblockedEmail,
  sendAccountWarningEmail,
  sendTemporaryBlockEmail,
  sendAccountStatusEmail
};